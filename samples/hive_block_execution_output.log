C:\Users\manojkumar.vohra\Desktop\hive-blocks\hive-blocks\target>java -cp Hive-Blocks-0.0.1-jar-with-dependencies.jar com.blocks.main.HBlockExecutor C:/Users/manojkumar.vohra/Desktop/hive-blocks/hive-blocks/samples/hive_blocks.xml C:/Users/manojkumar.vohra/Desktop/hive-blocks/hive-blocks/hive_blocks.properties

--------------------------------Executing XML---------------------------------------------
<?xml version="1.0" encoding="UTF-8"?><blocks id="hive-blocks" base-path="C:/Users/manojkumar.vohra/Desktop/hive-blocks-latest/hive-blocks/samples/">
  <block id="first-block">
    <!-- GLOBAL BLOCK LEVEL VARIABLES-->
    <variable name="b1Var1" type="numeric"/>
    <variable name="b1Var2" type="string"/>
    <variable name="addVal" type="numeric"/>
    <variable name="from_date" type="timestamp"/>
    <variable name="to_date" type="timestamp"/>
    <!-- SELECT QUERY RESULT VALUES INTO VARIABLES-->
    <export id="export_both_vars" query-file="export_vars.hql"/>
    <export id="export_dates" query-file="export_dates.hql"/>
    <print text="Exported values to date variables -- from_date is :from_date | to_date is :to_date"/>
    <query id="create and delete" query-file="create_and_delete_from_created.hql"/>
    <!-- IF BLOCK-->
    <if id="if_gt_2" condition=":b1Var1 &gt; 2 AND :b1Var2 == 'abc'">
      <!-- IF BLOCK LEVEL VARIABLES-->
      <variable name="b1Var2" type="string" value="overriden-b1Var2"/>
      <!-- QUERY TO BE EXECUTED, VARIABLES SUBSTITUTED IF ANY FOUND IN QUERY-->
      <query id="pre_sub_if" query-file="pre_if.hql"/>
      <!-- NESTED IF ELSE BLOCK-->
      <if id="sub_if" condition=":b1Var2 == 'overriden-b1Var2'">
        <query id="insert_dummy" query-file="insert_into_dummy.hql"/>
      </if>
      <else id="sub_else">
        <print text="sub_if not executed"/>
      </else>
      <query id="post_if" query-file="post_if.hql"/>
      <!-- FOR EACH RECORD FETCHED FROM QUERY, ITERATE AND EXECUTE SUB ELEMENTS-->
      <for id="for each dummy value" query-file="iterate_dummy.hql">
        <variable name="dummyfield" type="numeric"/>
        <print text="Got Dummy Value=:dummyfield"/>
      </for>
    </if>
    <export id="add vars and prepare new" query-file="add_to_vars.hql"/>
    <query id="last insert" query-file="insert_into_dummy_plus.hql"/>
    <!-- IF ELSEIF .... ELSE BLOCK: TESTING ELSEIF EXECUTION-->
    <if id="nano_if" condition=":addVal != 4">
      <print text="added value is not 4"/>
    </if>
    <elseif id="nano_else_if" condition=":addVal == 4">
      <print text="added value is 4"/>
    </elseif>
    <else id="else">
      <print text="okay its something else then"/>
    </else>
    <!-- IF ELSEIF .... ELSE BLOCK: TESTING ELSE EXECUTION-->
    <if id="nano_if" condition=":addVal == 5">
      <print text="added value is not 5"/>
    </if>
    <elseif id="nano_else_if" condition=":addVal == 6">
      <print text="added value is 6"/>
    </elseif>
    <else id="else">
      <print text="okay its something else then"/>
    </else>
  </block>
</blocks>


------------------------------------------------------------------------------------------

Validating Blocks Semantics
Blocks Semantics are correct
Starting execution of blocks:hive-blocks

--------------------------------------------------------
Executing Block[first-block]
--------------------------------------------------------


--------------------------------------------------------
Executing Export[export_both_vars] IN BLOCK[first-block]
--------------------------------------------------------

ORIGINAL EXPORT QUERY
---------------------

    select
        3 b1Var1,
        'abc' b1Var2 
    from
        default.dual limit 1

TRANSLATED EXPORT QUERY
------------------------

    select
        3 b1Var1,
        'abc' b1Var2 
    from
        default.dual limit 1

--------------------------------------------------------
Executing Export[export_dates] IN BLOCK[first-block]
--------------------------------------------------------

ORIGINAL EXPORT QUERY
---------------------

    select
        concat(date_format(current_date(),
        'yyyy-MM-dd'),
        ' 00:00:00') from_date,
        concat(date_format(current_date(),
        'yyyy-MM-dd'),
        ' 23:59:59') to_date 
    from
        default.dual

TRANSLATED EXPORT QUERY
------------------------

    select
        concat(date_format(current_date(),
        'yyyy-MM-dd'),
        ' 00:00:00') from_date,
        concat(date_format(current_date(),
        'yyyy-MM-dd'),
        ' 23:59:59') to_date 
    from
        default.dual
Exported values to date variables -- from_date is '2016-06-15 00:00:00' | to_date is '2016-06-15 23:59:59'

--------------------------------------------------------
Executing QUERY[create and delete] IN BLOCK[first-block]
----------------------------------------------------------

ORIGINAL QUERY
--------------

    use default

TRANSLATED QUERY
-----------------

    use default
0 rows updated
ORIGINAL QUERY
--------------

    CREATE TABLE IF NOT EXISTS default.blocks_hive(    name varchar(10))  CLUSTERED 
BY
    (name) 
INTO
    1 BUCKETS  STORED AS ORC   TBLPROPERTIES ('transactional'='true')

TRANSLATED QUERY
-----------------

    CREATE TABLE IF NOT EXISTS default.blocks_hive(    name varchar(10))  CLUSTERED 
BY
    (name) 
INTO
    1 BUCKETS  STORED AS ORC   TBLPROPERTIES ('transactional'='true')
0 rows updated
ORIGINAL QUERY
--------------

    DELETE 
    FROM
        default.blocks_hive

TRANSLATED QUERY
-----------------

    DELETE 
    FROM
        default.blocks_hive
0 rows updated

--------------------------------------------------------
Executing IF[if_gt_2] IN BLOCK[first-block]
--------------------------------------------------------

ORIGINAL QUERY
--------------

    SELECT
        :b1Var1 > 2 
        AND :b1Var2 == 'abc' 
    FROM
        default.dual LIMIT 1

TRANSLATED QUERY
-----------------

    SELECT
        3 > 2 
        AND 'abc' == 'abc' 
    FROM
        default.dual LIMIT 1
....................................
IF:BLOCK[first-block]IF[if_gt_2] RESULT=true
....................................

--------------------------------------------------------
Executing QUERY[pre_sub_if] IN BLOCK[first-block]IF[if_gt_2]
----------------------------------------------------------

ORIGINAL QUERY
--------------

    select
        'pre' 
    from
        default.dual limit 1

TRANSLATED QUERY
-----------------

    select
        'pre' 
    from
        default.dual limit 1
0 rows updated
ORIGINAL QUERY
--------------

    select
        'pre-again' 
    from
        default.dual limit 2

TRANSLATED QUERY
-----------------

    select
        'pre-again' 
    from
        default.dual limit 2
0 rows updated

--------------------------------------------------------
Executing IF[sub_if] IN BLOCK[first-block]IF[if_gt_2]
--------------------------------------------------------

ORIGINAL QUERY
--------------

    SELECT
        :b1Var2 == 'overriden-b1Var2' 
    FROM
        default.dual LIMIT 1

TRANSLATED QUERY
-----------------

    SELECT
        'overriden-b1Var2' == 'overriden-b1Var2' 
    FROM
        default.dual LIMIT 1
....................................
IF:BLOCK[first-block]IF[if_gt_2]IF[sub_if] RESULT=true
....................................

--------------------------------------------------------
Executing QUERY[insert_dummy] IN BLOCK[first-block]IF[if_gt_2]IF[sub_if]
----------------------------------------------------------

ORIGINAL QUERY
--------------

    insert 
    into
        default.dummy
        
    values
        (:b1Var1)

TRANSLATED QUERY
-----------------

    insert 
    into
        default.dummy
        
    values
        (3)
0 rows updated

--------------------------------------------------------
Executing QUERY[post_if] IN BLOCK[first-block]IF[if_gt_2]
----------------------------------------------------------

ORIGINAL QUERY
--------------

    select
        'post' 
    from
        default.dual limit 1

TRANSLATED QUERY
-----------------

    select
        'post' 
    from
        default.dual limit 1
0 rows updated

--------------------------------------------------------
Executing FOR[for each dummy value] IN BLOCK[first-block]IF[if_gt_2]
--------------------------------------------------------

ORIGINAL QUERY
--------------

    select
        dummyfield 
    from
        default.dummy limit :b1Var1

TRANSLATED QUERY
-----------------

    select
        dummyfield 
    from
        default.dummy limit 3
Got Dummy Value=3
Got Dummy Value=4
Got Dummy Value=3

--------------------------------------------------------
Executing Export[add vars and prepare new] IN BLOCK[first-block]
--------------------------------------------------------

ORIGINAL EXPORT QUERY
---------------------

    select
        :b1Var1+1 addVal 
    from
        default.dual limit 1

TRANSLATED EXPORT QUERY
------------------------

    select
        3+1 addVal 
    from
        default.dual limit 1

--------------------------------------------------------
Executing QUERY[last insert] IN BLOCK[first-block]
----------------------------------------------------------

ORIGINAL QUERY
--------------

    insert 
    into
        default.dummy
        
    values
        (:addVal)

TRANSLATED QUERY
-----------------

    insert 
    into
        default.dummy
        
    values
        (4)
0 rows updated

--------------------------------------------------------
Executing IF[nano_if] IN BLOCK[first-block]
--------------------------------------------------------

ORIGINAL QUERY
--------------

    SELECT
        :addVal != 4 
    FROM
        default.dual LIMIT 1

TRANSLATED QUERY
-----------------

    SELECT
        4 != 4 
    FROM
        default.dual LIMIT 1
....................................
IF:BLOCK[first-block]IF[nano_if] RESULT=false
....................................

--------------------------------------------------------
Executing ELSEIF[nano_else_if] IN BLOCK[first-block]
--------------------------------------------------------

ORIGINAL QUERY
--------------

    SELECT
        :addVal == 4 
    FROM
        default.dual LIMIT 1

TRANSLATED QUERY
-----------------

    SELECT
        4 == 4 
    FROM
        default.dual LIMIT 1
....................................
ELSEIF:BLOCK[first-block]ELSEIF[nano_else_if] RESULT=true
....................................
added value is 4

--------------------------------------------------------
Executing IF[nano_if] IN BLOCK[first-block]
--------------------------------------------------------

ORIGINAL QUERY
--------------

    SELECT
        :addVal == 5 
    FROM
        default.dual LIMIT 1

TRANSLATED QUERY
-----------------

    SELECT
        4 == 5 
    FROM
        default.dual LIMIT 1
....................................
IF:BLOCK[first-block]IF[nano_if] RESULT=false
....................................

--------------------------------------------------------
Executing ELSEIF[nano_else_if] IN BLOCK[first-block]
--------------------------------------------------------

ORIGINAL QUERY
--------------

    SELECT
        :addVal == 6 
    FROM
        default.dual LIMIT 1

TRANSLATED QUERY
-----------------

    SELECT
        4 == 6 
    FROM
        default.dual LIMIT 1
....................................
ELSEIF:BLOCK[first-block]ELSEIF[nano_else_if] RESULT=false
....................................

--------------------------------------------------------
Executing ELSE[else] IN BLOCK[first-block]
--------------------------------------------------------

okay its something else then
